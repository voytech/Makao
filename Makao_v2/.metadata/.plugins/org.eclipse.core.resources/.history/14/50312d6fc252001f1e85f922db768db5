package tests;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;

import org.junit.* ;

import server.RequestGenerator;
import shared.Card;
import shared.CardStack;
import shared.Messenger;
import shared.Packet;
import shared.Request;
import server.*;
import static org.junit.Assert.* ;


public class RequestsGeneratorTest {
	@Test
	public void testWetherGeneratesTwoOrThreeRequest()
	{
		CardStack stack = new CardStack();
		stack.push(new Card(Card.Name.ACE,Card.Suit.DIAMOND));
		stack.push(new Card(Card.Name.ACE,Card.Suit.HEART));
		stack.push(new Card(Card.Name.TWO,Card.Suit.DIAMOND));
	
		RequestGenerator generator = new RequestGenerator(stack);
		Request s_request = generator.prepareRequest(null);
		Assert.assertEquals(Request.REQUEST_CARD_NAME, s_request.getID());
		Card.Name[] names = (Card.Name[])s_request.getArg();
		
		Assert.assertEquals(Card.Name.TWO, names[0]);
		Assert.assertEquals(Card.Name.THREE, names[1]);	
	}
	@Test
	public void testWetherGeneratesTakeRequest()
	{
		CardStack stack = new CardStack();
		stack.push(new Card(Card.Name.ACE,Card.Suit.DIAMOND));
		stack.push(new Card(Card.Name.ACE,Card.Suit.HEART));
		stack.push(new Card(Card.Name.TWO,Card.Suit.DIAMOND));
	
		RequestGenerator generator = new RequestGenerator(stack);
		Request s_request = generator.prepareRequest(null);
		Assert.assertEquals(Request.REQUEST_CARD_NAME, s_request.getID());
		Card.Name[] names = (Card.Name[])s_request.getArg();
		
		Assert.assertEquals(Card.Name.TWO, names[0]);
		Assert.assertEquals(Card.Name.THREE, names[1]);	
	}
}
