package tests;

import java.awt.image.BufferedImage;
import java.io.File;

import org.junit.* ;

import client.CardNode;
import client.ImagesBuffer;

import shared.*;
import static org.junit.Assert.*; 

public class CardNodeTest {

	private void initializeBuffer()
	{
		File dir = new File("cards"); 
		String[] files = dir.list();
		for (int i=0;i<files.length;i++)
		{
			File temp = new File(files[i]);
			{
				String name =files[i].substring(0, files[i].lastIndexOf("."));
				ImagesBuffer.getInstance().addEntry(name, "cards"+File.separator+temp.getName());
			}
		}	
	}
	@Test
	public void testCreatingCardNodeAndGettingCard()
	{
		for (Card.Name name : Card.Name.values())
			for (Card.Suit suit : Card.Suit.values())
			{
				CardNode node = new CardNode(new Card(name,suit));
				Card card = (Card)node.getNestedObject();
				Assert.assertEquals(name, card.getName());
				Assert.assertEquals(suit, card.getSuit());
			}
	}
	@Test
	public void testWetherAfterInitializingBufferAndThenCreatingCardImageIsLoaded()
	{	
		initializeBuffer();
		for (Card.Name name : Card.Name.values())
			for (Card.Suit suit : Card.Suit.values())
			{
				CardNode node = new CardNode(new Card(name,suit));
				BufferedImage cardImage = (BufferedImage)node.getImage();
				Assert.assertNotNull(cardImage);
			}
	}
}
